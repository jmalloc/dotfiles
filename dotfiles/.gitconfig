[user]
    name = James Harris
    email = mailjamesharris@gmail.com
	signingkey = AC537F144FA9388C

[github]
    user = jmalloc

[ghi]
    token = !security find-internet-password -a jmalloc -s github.com -l 'ghi token' -w

[core]
    autocrlf = input
    excludesfile = ~/.gitignore.global
    whitespace = trailing-space,space-before-tab,tabwidth=4
    pager = /usr/local/opt/git/share/git-core/contrib/diff-highlight/diff-highlight | less

[alias]
    ; diff ...
    d = diff
    dc = diff --cached
    wd = diff --word-diff
    wdc = diff --cached --word-diff
    sd = diff --ignore-all-space
    sdc = diff --cached --ignore-all-space

    ; log ...
    l  = log --pretty='%C(dim cyan)%h%C(reset) %C(yellow)|%C(reset) %s%C(cyan)%d%C(reset) %C(dim)by %an %ar' --first-parent -20 ; log
    lp = log --pretty='%C(dim)%<|(15)%p %C(cyan)%h%C(reset) %C(yellow)|%C(reset) %s%C(cyan)%d%C(reset) %C(dim)by %an %ar' -20 ; log showing parent commits
    lg = log --pretty='%C(dim cyan)%H%C(reset)%C(cyan)%d%C(reset) %C(dim)by %an %ar%n%s%+b%n' --graph ; log graph
    lb = !git l $(git merge-base $(basename $(git remote show origin | grep 'HEAD branch:' | cut -d: -f2)) HEAD)..HEAD ; log this branch
    lm = "!f() { git log --pretty='%C(dim)%<|(15)%p %C(cyan)%h%C(reset) %C(yellow)|%C(reset) %s%C(cyan)%d%C(reset) %C(dim)by %an %ar' --stat \"$1^..$1\"; }; f"; log merge

    ; staging + committing ...
    s = status -bs
    c = commit
    t = tag
    cm = commit -m
    ca = commit --amend
    a = add
    aa = add -A
    ap = add -A --patch
    wip = "!git add -A && git commit -m 'WIP [ci skip]'"
    unstage = reset HEAD --
    scrub = "!git checkout . && git clean --force -d"
    destroy = "!git unstage && git scrub"

    ; push + pull ...
    p = "!git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)"
    pt = push --all --follow-tags
    u = pull --rebase
    pr = pull-request

    ; branching ...
    b = branch
    m = merge --no-ff
    ff = merge --ff-only
    co = checkout
    cb = checkout -b
    cc = "!git checkout $(git remote show origin | grep 'HEAD branch:' | cut -d: -f2)" ; checkout default branch

[diff]
    renames = true

[fetch]
    prune = true

[help]
    autocorrect = 10

[commit]
    gpgsign = true

[tag]
    forceSignAnnotated = true

[color]
    ui = auto

[color "diff"]
    meta = dim bold
    frag = dim
    old = red
    new = green

[color "status"]
    added = green
    changed = yellow
    untracked = red

[push]
    default = simple

[tag]
    sort = version:refname

[filter "lfs"]
    smudge = git-lfs smudge %f
    required = true
    clean = git-lfs clean %f
