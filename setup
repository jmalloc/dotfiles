#!/bin/bash
set -e

update-dotfiles

PHP_VERSIONS="55 56 70"
PHP_EXTENSIONS="curl http iconv intl mbstring mysql openssl pcntl posix sqlite xdebug zip"

# Make sure is run as root ...
if [[ $UID != 0 ]]; then
    sudo "$0" $(whoami) "$HOME" # Pass through the current user / home directory so we have them when running as root
    exit $?
fi

USERNAME="$1"
HOME_DIR="$2"

# Add entry to sudoers ...
SUDOERS="/etc/sudoers"
SUDO="$USERNAME ALL=(ALL) NOPASSWD: ALL"

if ( ! grep "$SUDO" "$SUDOERS" > /dev/null ); then
    echo >> $SUDOERS
    echo "# Added by jmalloc dotfiles: " >> $SUDOERS
    echo $SUDO >> $SUDOERS
    echo >> $SUDOERS

    echo "Added $USERNAME to /etc/sudoers"
    echo
fi

PACKAGES="git git-flow-avh hub nodejs npm rabbitmq-server mariadb-10.0-server redis couchdb"

PHP_VERSIONS="55 56 70"
PHP_EXTENSIONS="curl http iconv intl mbstring mysql openssl pcntl posix sqlite xdebug zip"

for VER in $PHP_VERSIONS; do
    PACKAGES="$PACKAGES php$VER"
    for EXT in $PHP_EXTENSIONS; do
        PACKAGES="$PACKAGES php$VER-$EXT"
    done
done

echo "Installing MacPorts packages:"
FAILURES=""
for PACKAGE in $PACKAGES; do
    echo -n " * $PACKAGE: "

    if ( port install $PACKAGE > /dev/null ); then
        echo "done"
    else
        FAILURES="$FAILURES $PACKAGE"
    fi
done
echo

if [[ "" != "$FAILURES" ]]; then
    echo "The following packages failed to install:"
    for PACKAGE in $FAILURES; do
        echo " * $PACKAGE"
    done
fi

for VER in $PHP_VERSIONS; do
    DIR="/opt/local/etc/php$VER"
    if [ -d $DIR ]; then
        cp "$(dirname $0)/res/php.ini" "/opt/local/etc/php$VER"
    fi
done

mkdir -p "$HOME_DIR/bin" > /dev/null

echo "Installing composer:"
curl -s https://getcomposer.org/installer | php -- "--install-dir=$HOME_DIR/bin"
mv "$HOME_DIR/bin/composer.phar" "$HOME_DIR/bin/composer"
chmod +x "$HOME_DIR/bin/composer"
chown "$USERNAME" "$HOME_DIR/bin/composer"
echo

echo "Installing phpunit (v4):"
curl -s https://phar.phpunit.de/phpunit-old.phar -o "$HOME_DIR/bin/phpunit"
chmod +x "$HOME_DIR/bin/phpunit"
chown "$USERNAME" "$HOME_DIR/bin/phpunit"
echo

echo "Installing php-cs-fixer:"
curl http://get.sensiolabs.org/php-cs-fixer.phar -o "$HOME_DIR/bin/php-cs-fixer"
chmod +x "$HOME_DIR/bin/php-cs-fixer"
chown "$USERNAME" "$HOME_DIR/bin/php-cs-fixer"
echo

echo "Installing coffee-script:"
npm install -g coffee-script > /dev/null
echo

# Authorise hub (will ask for user/pass once) ...
echo "Authorizing hub: "
hub browse
