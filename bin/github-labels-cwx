#!/usr/bin/env php
<?php
error_reporting(-1);

if (!isset($_SERVER['argv'][1])) {
    die('OAuth token required.' . PHP_EOL);
}

$token = $_SERVER['argv'][1];
$orgs = ['codeworx'];

// The desired labels and their colours ...
$expected = [
    'defect'  => 'fc2929',
    'easy pick' => 'd7e102',
    'priority' => '5319e7',
    'status: in progress' => '009800',
    'status: testing' => 'eb6420'
];

$rename = [
    'bug' => 'defect',
];

// ---------------------------------------------------------------------------------------------------------------------

function api($uri, $method = 'GET', $body = null)
{
    global $token;

    $url = 'https://api.github.com/' . ltrim($uri, '/');
    $ch = curl_init($url);

    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
    curl_setopt($ch, CURLOPT_USERAGENT, 'PHP');
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Authorization: token ' . $token]);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    if ($body) {
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($body));
    }

    $response = curl_exec($ch);

    $code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    if (!in_array($code, [200, 201, 204])) {
        throw new Exception($code . ': ' . $response);
    }

    return json_decode($response);
}

function create($owner, $repo, $name, $color)
{
    echo '   * create ' . $name . ' with color ' . $color . PHP_EOL;
    api('/repos/' . rawurlencode($owner) . '/' . rawurlencode($repo) . '/labels', 'POST', ['name' => $name, 'color' => $color]);
}

function update($owner, $repo, $name, $color = null, $newName = null)
{
    if ($color !== null && $newName !== null) {
        echo '   * rename ' . $name . ' to ' . $newName . ' and set color to ' . $color . PHP_EOL;
        api('/repos/' . rawurlencode($owner) . '/' . rawurlencode($repo) . '/labels/' . rawurlencode($name), 'PATCH', ['name' => $newName, 'color' => $color]);
    } elseif ($color !== null) {
        echo '   * set ' . $name . ' color to ' . $color . PHP_EOL;
        api('/repos/' . rawurlencode($owner) . '/' . rawurlencode($repo) . '/labels/' . rawurlencode($name), 'PATCH', ['color' => $color]);
    } elseif ($newName !== null) {
        echo '   * rename ' . $name . ' to ' . $newName . PHP_EOL;
        api('/repos/' . rawurlencode($owner) . '/' . rawurlencode($repo) . '/labels/' . rawurlencode($name), 'PATCH', ['name' => $newName]);
    }
}

function delete($owner, $repo, $name)
{
    echo '   * delete ' . $name . PHP_EOL;
    api('/repos/' . rawurlencode($owner) . '/' . rawurlencode($repo) . '/labels/' . rawurlencode($name), 'DELETE');
}

foreach ($orgs as $owner) {
    echo $owner . PHP_EOL;

    $repos = api('/orgs/' . rawurlencode($owner) . '/repos?per_page=100');

    foreach ($repos as $repo) {
        if (!$repo->permissions->admin) {
            echo ' - ' . $repo->name . ' (skipped)' . PHP_EOL;
            continue;
        }

        echo ' - ' . $repo->name . PHP_EOL;

        $labels = api('/repos/' . rawurlencode($repo->owner->login) . '/' . rawurlencode($repo->name) . '/labels');
        $solved = [];

        foreach ($labels as $label) {
            if (array_key_exists($label->name, $expected)) {
                $solved[$label->name] = true;
                $color = $expected[$label->name];
                if ($color !== $label->color) {
                    update($owner, $repo->name, $label->name, $color);
                }
            } elseif (array_key_exists($label->name, $rename)) {
                $solved[$rename[$label->name]] = true;
                $color = $expected[$rename[$label->name]];
                if ($color !== $label->color) {
                    update($owner, $repo->name, $label->name, $color, $rename[$label->name]);
                } else {
                    update($owner, $repo->name, $label->name, null, $rename[$label->name]);
                }
            } else {
                delete($owner, $repo->name, $label->name);
            }
        }

        foreach ($expected as $name => $color) {
            if (!array_key_exists($name, $solved)) {
                create($owner, $repo->name, $name, $color);
            }
        }
    }
}
